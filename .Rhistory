class(totSignals) <- "numeric"
tot.pca <- prcomp(totSignals, center = TRUE, scale. = TRUE)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = totType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  totType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
gene.exp.tot <- combat_edata[row.names(combat_edata) %in% gene.List,]
gene.exp.tot <- as.data.frame(t(gene.exp.tot))
gene.exp.tot <- cbind(gene.exp.tot,as.factor(pdata.all$description))
colnames(gene.exp.tot)[26] <- "sml"
#Fixing Gene names
{gene.names <- tT[tT$ID %in% gene.List,]
gene.names[,c(1,3)]
gene.names <- gene.names[gene.names$ID %in% names(gene.exp.tot),]
gene.names <- gene.names[,c(1,3)]
names(gene.exp.tot)
gene.names <-gene.names[names(gene.exp.tot),]
gene.names <- gene.names[!is.na(gene.names$ID),]
gene.names <- gene.names$Gene.symbol
gene.names <- c(gene.names, "sml")
}
#Fixing Gene names
{gene.names <- tT[tT$ID %in% gene.List,]
gene.names[,c(1,3)]
gene.names <- gene.names[gene.names$ID %in% names(gene.exp.tot),]
gene.names <- gene.names[,c(1,3)]
names(gene.exp.tot)
gene.names <-gene.names[names(gene.exp.tot),]
gene.names <- gene.names[!is.na(gene.names$ID),]
gene.names <- gene.names$Gene.symbol
gene.names <- c(gene.names, "sml")
}
#gene.names[c(8,10,15,22,24)] <- c("aa","bb","cc","dd","ee")
colnames(gene.exp.tot) <- gene.names
set.seed(2)
validation_index <- createDataPartition(gene.exp.tot$sml, p=0.70, list=FALSE)
train.set   <- gene.exp.tot[validation_index,]
tests.set   <- gene.exp.tot[-validation_index,]
#which(train.set$sml == "G0")
#names(train.set)
input.vals  <- train.set[,1:25]
output.vals <- train.set[,26]
#control <- trainControl(method="cv", number=5)
nrow(train.set)
#control <- trainControl(method="cv", number=5)
nrow(tests.set)
a  <- 1:30
mean(a)
sd(a)
gene.exp.tot <- combat_edata
gene.exp.tot <- combat_edata
#totSignals <- as.matrix(gene.exp.tot[,-26])
#totType    <- (gene.exp.tot[,26])
totType    <- (pdata.all$description)
totType    <- revalue(totType, c("G0"="Non-Malignant", "G1"="Malignant"))
pcapdata   <- pdata.all
pcapdata[pcapdata$batch ==0,]$batch <- 1
batchType  <- as.factor(pcapdata$batch)
batchType  <-  revalue(batchType, c("1"="GSE12172", "2"="GSE14407","3"="GSE9899",
"4"="GSE37648","6"="GSE18521","7"="GSE38666",
"8"="GSE10971"))
totSignals <- totSignals[nrow(totSignals):1,]
totType    <-  totType[length(totType):1]
batchType  <- batchType[length(batchType):1]
class(totSignals) <- "numeric"
tot.pca <- prcomp(totSignals, center = TRUE, scale. = TRUE)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = totType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  totType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=1,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = F)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=1,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
gene.exp.tot <- combat_edata
totSignals <- as.matrix(gene.exp.tot)
#totSignals <- as.matrix(gene.exp.tot[,-26])
#totType    <- (gene.exp.tot[,26])
totType    <- (pdata.all$description)
totType    <- revalue(totType, c("G0"="Non-Malignant", "G1"="Malignant"))
pcapdata   <- pdata.all
pcapdata[pcapdata$batch ==0,]$batch <- 1
batchType  <- as.factor(pcapdata$batch)
batchType  <-  revalue(batchType, c("1"="GSE12172", "2"="GSE14407","3"="GSE9899",
"4"="GSE37648","6"="GSE18521","7"="GSE38666",
"8"="GSE10971"))
#totSignals <- totSignals[nrow(totSignals):1,]
#totType    <-  totType[length(totType):1]
#batchType  <- batchType[length(batchType):1]
class(totSignals) <- "numeric"
tot.pca <- prcomp(totSignals, center = TRUE, scale. = TRUE)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = F)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=1,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
totSignals
gene.exp.tot <- combat_edata
totSignals <- t(as.matrix(gene.exp.tot))
#totSignals <- as.matrix(gene.exp.tot[,-26])
#totType    <- (gene.exp.tot[,26])
totType    <- (pdata.all$description)
totType    <- revalue(totType, c("G0"="Non-Malignant", "G1"="Malignant"))
pcapdata   <- pdata.all
pcapdata[pcapdata$batch ==0,]$batch <- 1
batchType  <- as.factor(pcapdata$batch)
batchType  <-  revalue(batchType, c("1"="GSE12172", "2"="GSE14407","3"="GSE9899",
"4"="GSE37648","6"="GSE18521","7"="GSE38666",
"8"="GSE10971"))
class(totSignals) <- "numeric"
tot.pca <- prcomp(totSignals, center = TRUE, scale. = TRUE)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = F)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=1,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=2,aes(color =  batchType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=2,aes(color =  batchType,shape = totType))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
Tissue.Type <- totType
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  batchType,shape = Tissue.Type))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
gene.exp.tot <- edata.all
totSignals <- t(as.matrix(gene.exp.tot))
#totSignals <- as.matrix(gene.exp.tot[,-26])
#totType    <- (gene.exp.tot[,26])
totType    <- (pdata.all$description)
totType    <- revalue(totType, c("G0"="Non-Malignant", "G1"="Malignant"))
pcapdata   <- pdata.all
pcapdata[pcapdata$batch ==0,]$batch <- 1
batchType  <- as.factor(pcapdata$batch)
batchType  <-  revalue(batchType, c("1"="GSE12172", "2"="GSE14407","3"="GSE9899",
"4"="GSE37648","6"="GSE18521","7"="GSE38666",
"8"="GSE10971"))
Tissue.Type <- totType
class(totSignals) <- "numeric"
tot.pca <- prcomp(totSignals, center = TRUE, scale. = TRUE)
totType    <- revalue(totType, c("G0"="Non-Cancer", "G1"="Cancer"))
#totSignals <- as.matrix(gene.exp.tot[,-26])
#totType    <- (gene.exp.tot[,26])
totType    <- (pdata.all$description)
totType    <- revalue(totType, c("G0"="Non-Cancer", "G1"="Cancer"))
Tissue.Type <- totType
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  batchType,shape = Tissue.Type))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=1,aes(color =  batchType,shape = Tissue.Type))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
#print(tot.pca)
#dim(tot.pca)
#dim(tot.pca[[5]])
#tot.pca$x <- tot.pca$x[,2:20]
#tot.pca$rotation <- tot.pca$rotation[,2:20]
#tot.pca$sdev <- tot.pca$sdev[2:20]
g <- ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F, groups = batchType, ellipse = T)
#g <- g+ ggbiplot(tot.pca , obs.scale = 1, var.scale =1 , var.axes = F,ellipse.prob = 0.95, groups = totType, ellipse = T)
#g <-  g+geom_point(aes(shape=as.factor(modTot$cluster) , colour = totType ), size = 3)
g <- g + scale_color_discrete(name = "Batch") + geom_point(size=3,aes(color =  batchType,shape = Tissue.Type))
g <- g+ theme(legend.direction = "vertical",
legend.position = "right",
plot.title = element_text(size = 20),
axis.title = element_text(size = 20),
legend.text = element_text(size = 16),
legend.title=element_text(face = "bold", size = 14),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(g)
b
gene.exp.tot <- combat_edata[row.names(combat_edata) %in% gene.List,]
gene.exp.tot <- as.data.frame(t(gene.exp.tot))
gene.exp.tot <- cbind(gene.exp.tot,as.factor(pdata.all$description))
colnames(gene.exp.tot)[26] <- "sml"
#Using Combat for batch effect Removal
{
gene.exp.tot <- combat_edata[row.names(combat_edata) %in% gene.List,]
gene.exp.tot <- as.data.frame(t(gene.exp.tot))
gene.exp.tot <- cbind(gene.exp.tot,as.factor(pdata.all$description))
colnames(gene.exp.tot)[26] <- "sml"
}
#Fixing Gene names
{gene.names <- tT[tT$ID %in% gene.List,]
gene.names[,c(1,3)]
gene.names <- gene.names[gene.names$ID %in% names(gene.exp.tot),]
gene.names <- gene.names[,c(1,3)]
names(gene.exp.tot)
gene.names <-gene.names[names(gene.exp.tot),]
gene.names <- gene.names[!is.na(gene.names$ID),]
gene.names <- gene.names$Gene.symbol
gene.names <- c(gene.names, "sml")
}
#gene.names[c(8,10,15,22,24)] <- c("aa","bb","cc","dd","ee")
colnames(gene.exp.tot) <- gene.names
colnames(gene.exp.tot)
set.seed(2)
validation_index <- createDataPartition(gene.exp.tot$sml, p=0.70, list=FALSE)
train.set   <- gene.exp.tot[validation_index,]
tests.set   <- gene.exp.tot[-validation_index,]
#which(train.set$sml == "G0")
#names(train.set)
input.vals  <- train.set[,1:25]
output.vals <- train.set[,26]
#control <- trainControl(method="cv", number=5)
nrow(tests.set)
control <- trainControl(method="repeatedcv",number = 5,repeats = 10, summaryFunction = twoClassSummary
, classProbs = TRUE)
#?trainControl
#metric <- "Accuracy"
set.seed(7)
fit.lda <- train(sml ~ .,train.set, method="lda", metric="ROC", trControl=control)
probs.lda <- predict(fit.lda,tests.set[,1:25],type = "prob")
ROC.lda <- roc(tests.set$sml , probs.lda[, "G0"], levels = levels(tests.set$sml))
#plot(ROC.lda, type = "S", print.thres = .5)
#plot(fit.lda)
fit.lda
# CART
set.seed(7)
fit.cart <- train(sml ~ .,train.set, method="rpart", metric="ROC"
,tuneLength = 15, trControl=control)
probs.cart <- predict(fit.cart,tests.set[,1:25],type = "prob")
ROC.cart <- roc(tests.set$sml , probs.cart[, "G0"], levels = levels(tests.set$sml))
#plot(ROC.cart, type = "S", print.thres = .5)
# kNN
set.seed(7)
fit.knn <- train(sml ~ .,train.set, method="knn", metric="ROC", trControl=control)
probs.knn <- predict(fit.knn,tests.set[,1:25],type = "prob")
ROC.knn <- roc(tests.set$sml , probs.knn[, "G0"], levels = levels(tests.set$sml))
#plot(ROC.knn, type = "S", print.thres = .2)
# Generalized Linear Model with Stepwise Feature Selection
set.seed(7)
fit.glm <- train(sml ~ .,train.set, method = "glmStepAIC", metric="ROC", trControl=control)
probs.glm <- predict(fit.glm,tests.set[,1:25],type = "prob")
ROC.glm <- roc(tests.set$sml , probs.glm[, "G0"], levels = levels(tests.set$sml))
# Random Forest
set.seed(7)
#tunegrid <- expand.grid(.mtry=3)   ###, tuneGrid=tunegrid,importance=TRUE
fit.rf <- train(sml ~ .,train.set, method = "rf", metric="ROC",
trControl=control)
probs.rf <- predict(fit.rf,tests.set[,1:25],type = "prob")
ROC.rf <- roc(tests.set$sml , probs.rf[, "G0"], levels = levels(tests.set$sml))
# Gradient boosting
set.seed(7)
#tunegrid <- expand.grid(.mtry=3)   ###, tuneGrid=tunegrid,importance=TRUE
fit.gbm <- train(sml ~ .,train.set, method = "gbm", metric="ROC",
trControl=control)
probs.gbm <- predict(fit.gbm,tests.set[,1:25],type = "prob")
ROC.gbm <- roc(tests.set$sml , probs.gbm[, "G0"], levels = levels(tests.set$sml))
# Neural Networks
set.seed(7)
fit.nnet <- train(sml ~ .,train.set, method = "nnet", metric="ROC",
trControl=control)
probs.nnet <- predict(fit.nnet,tests.set[,1:25],type = "prob")
ROC.nnet <- roc(tests.set$sml , probs.nnet[, "G0"], levels = levels(tests.set$sml))
# SVM Radial basis
set.seed(7)
SVMgrid <- expand.grid(sigma = c(0.05), C = c(2))
fit.svm <- train(sml ~ .,train.set, method = "svmRadial", metric="ROC",
tuneGrid = SVMgrid,preProc = c("scale","YeoJohnson"),
trControl=control)
probs.svm <- predict(fit.svm,tests.set[,1:25],type = "prob")
ROC.svm <- roc(tests.set$sml , probs.svm[, "G0"], levels = levels(tests.set$sml))
ROC.gbm
ROC.rf
ROC.glm
ROC.knn
ROC.cart
ROC.lda
ROC.svm
plot(ROC.rf, type = "S", print.thres = .5)
plot(ROC.gbm, add = TRUE, col = "red")
plot(ROC.lda, add = TRUE, col = "blue")
plot(ROC.knn, add = TRUE, col = "green")
plot(ROC.glm, add = TRUE, col = "yellow")
plot(ROC.svm, add = TRUE, col = "brown")
plot(ROC.nnet,add = TRUE, col = "grey")
require(randomForest)
plot(fit.cart)
varImp(object=fit.rf)
plot(varImp(object=fit.rf))
plot(varImp(object=fit.svm))
plot(varImp(object=fit.glm))
plot(varImp(object=fit.knn))
varImp(object=fit.knn)
?importance
?importance
rff <- fit.rf$finalModel
importance(rff,plot = T)
importance(rff,plot = T)
?varImp
results <- resamples(list(lda=fit.lda, knn=fit.knn, rf=fit.rf, cart=fit.cart,
glm=fit.glm, svm=fit.svm))
?resamples
summary(results)
dotplot(results)
results <- resamples(list(lda=fit.lda, knn=fit.knn, rf=fit.rf, cart=fit.cart,
glm=fit.glm, svm=fit.svm))
summary(results)
dotplot(results)
update.packages()
update.packages()
results <- resamples(list(lda=fit.lda, knn=fit.knn, rf=fit.rf, cart=fit.cart,
glm=fit.glm, svm=fit.svm))
summary(results)
dotplot(results)
rm(list = ls())
